#!/bin/bash
#
# Screen record toggle.
#
# This script is platform specific and it is just used to interface with KMonad config.
#

DST_DIR="${HOME}/NoBackup/screen-rec"
PING_AFTER_SECONDS=1800
FRAME_RATE=25
INDICATOR_ICON=gtk-find
# TODO doc | test with "" / ''
INDICATOR_CMD=""

# --

# on click e.g. --command="echo 'Hello World'", **empty** command to avoid dismissing indicator on click
indicatorCmd="yad --notification --image=${INDICATOR_ICON} --command=${INDICATOR_CMD}"

show_indicator() {
  eval $indicatorCmd &disown
}

pingRecInProgress () {
  # will finish upon kill signal retrieval
  while true; do
    sleep $PING_AFTER_SECONDS
    notify-send 'New update available' # don't ask me about the message
  done
}

[ ! -d "$DST_DIR" ] && mkdir -p "$DST_DIR"

screenResolution=$(xdpyinfo | grep dimensions | awk '{ print $2 }')
outFile="${DST_DIR}/$(date '+%FT%H.%M.%S').mkv"

partialRecCmd="ffmpeg -video_size ${screenResolution} -framerate ${FRAME_RATE} -f x11grab -i ${DISPLAY}.0 -f pulse -ac 2 -i default"
recCmd="${partialRecCmd} ${outFile}"

recordingPid=$(pgrep --full "$partialRecCmd")
indicatorPid=$(pgrep --full "$indicatorCmd")

if [[ "$recordingPid" ]]; then
  # Already running: stopping...
  kill -INT "$recordingPid"     \
    && kill -TERM $indicatorPid \
    && pkill --oldest $(basename "$0")  # signal the recording instance
else
  # Start recording...
  eval $recCmd &disown   \
    && show_indicator \
    && pingRecInProgress
fi

